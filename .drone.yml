{
   "kind": "pipeline",
   "name": "Android wallet_api",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "echo deb http://deb.debian.org/debian sid contrib >/etc/apt/sources.list.d/sid-contrib.list",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "if [ -d /cache ]; then if ! [ -d /cache/google-android-ndk-installer ]; then mkdir /cache/google-android-ndk-installer; fi; ln -s /cache/google-android-ndk-installer /var/cache/; fi",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake g++ git ninja-build ccache tar xz-utils google-android-ndk-installer autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client",
            "mkdir build-armeabi-v7a",
            "cd build-armeabi-v7a",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=armeabi-v7a -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=armv7-a -DARCH_ID=arm32",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "mkdir build-arm64-v8a",
            "cd build-arm64-v8a",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=arm64-v8a -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=armv8-a -DARCH_ID=arm64",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "mkdir build-x86_64",
            "cd build-x86_64",
            "cmake .. -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_C_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=/usr/lib/android-sdk/ndk-bundle/build/cmake/android.toolchain.cmake -DANDROID_PLATFORM=21 -DANDROID_ABI=x86_64 -DMONERO_SLOW_HASH=ON -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DBUILD_STATIC_DEPS=ON -DSTATIC=ON -G Ninja -DARCH=\"x86-64 -msse4.2 -mpopcnt\" -DARCH_ID=x86-64",
            "ninja -j6 -v wallet_merged",
            "cd ..",
            "./utils/build_scripts/drone-android-static-upload.sh armeabi-v7a arm64-v8a x86_64"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "debian:sid",
         "name": "build"
      }
   ],
   "type": "docker"
}

















































{
   "kind": "pipeline",
   "name": "macOS (Static)",
   "platform": {
      "arch": "amd64",
      "os": "darwin"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "name": "submodules"
      },
      {
         "commands": [
            "export SDKROOT=\"$(xcrun --sdk macosx --show-sdk-path)\"",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fcolor-diagnostics -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.belnet.dev/deps -DUSE_LTO=ON -DBUILD_STATIC_DEPS=ON -DARCH=core2 -DARCH_ID=amd64",
            "ninja -j6 -v",
            "../utils/build_scripts/drone-check-static-libs.sh",
            "ninja strip_binaries",
            "ninja create_tarxz",
            "../utils/build_scripts/drone-static-upload.sh"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "build"
      },
      {
         "commands": [
            "git clone https://github.com/beldex-coin/beldex-electron-gui-wallet.git",
            "cp -v build/bin/{beldexd,beldex-wallet-rpc} beldex-electron-gui-wallet/bin",
            "cd beldex-electron-gui-wallet",
            "sed -i -e 's/^\\\\( *\"version\": \".*\\\\)\",/\\\\1-${DRONE_COMMIT_SHA:0:8}\",/' package.json",
            "npm install",
            "npm run build",
            "../utils/build_scripts/drone-wallet-upload.sh"
         ],
         "environment": {
            "CSC_IDENTITY_AUTO_DISCOVERY": "false",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "name": "GUI Wallet (dev)",
         "platform": {
            "arch": "amd64",
            "os": "darwin"
         }
      }
   ],
   "type": "exec"
}
